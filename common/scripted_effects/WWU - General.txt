#Unsorted Scripted effects:

add_mutual_opinion_modifier_effect = {
	add_opinion = {
		who = $scope_country$
		modifier = $opinion_modifier$
	}
	reverse_add_opinion = {
		who = $scope_country$
		modifier = $opinion_modifier$
	}
}

#General effect for extending or adding province modifier
#Province Scope
add_or_extend_province_modifier_effect = {
	if = {
		limit = {
			has_province_modifier = $MODIFIER$
		}
		extend_province_modifier = { name = $MODIFIER$ duration = $DURATION$ }
	}
	else = {
		add_province_modifier = { name = $MODIFIER$ duration = $DURATION$ }
	}
}

#Used in army professionalism event:
#used where FROM is a province and ROOT is a country, ie onaction for provinces fallen
add_loot_from_province_effect = { 
	if = {
		limit = {
			FROM = {
				NOT = { development = 18 }
			}
		}
		add_treasury = 115
		add_mil_power = 15
	}
	if = {
		limit = {
			FROM = {
				development = 18
				NOT = { development = 21 }
			}
		}
		add_treasury = 135
		add_mil_power = 15
	}
	if = {
		limit = {
			FROM = {
				development = 21
				NOT = { development = 24 }
			}
		}
		add_treasury = 155
		add_mil_power = 25
	}
	if = {
		limit = {
			FROM = {
				development = 24
				NOT = { development = 27 }
			}
		}
		add_treasury = 180
		add_mil_power = 30
	}
	if = {
		limit = {
			FROM = {
				development = 27
				NOT = { development = 30 }
			}
		}
		add_treasury = 210
		add_mil_power = 40
	}
	if = {
		limit = {
			FROM = {
				development = 30
				NOT = { development = 33 }
			}
		}
		add_treasury = 230
		add_mil_power = 50
	}
	if = {
		limit = {
			FROM = {
				development = 33
			}
		}
		add_treasury = 250
		add_mil_power = 55
	}
}

#Generalized version of the same effect, for use in province scope.
#used where ROOT is a province, ie onaction for provinces fallen
#$LOOTER$ is the scope of the tag performing the Looting (so for instance owner)
add_loot_from_rich_province_general_effect = { 
	add_devastation = 80
	if = {
		limit = {
			NOT = { development = 18 }
		}
		$LOOTER$ = {
			add_treasury = 400
			add_mil_power = 15
		}
	}
	if = {
		limit = {
			development = 18
			NOT = { development = 21 }
		}
		$LOOTER$ = {
			add_treasury = 435
			add_mil_power = 15
		}
	}
	if = {
		limit = {
			development = 21
			NOT = { development = 24 }
		}
		$LOOTER$ = {
			add_treasury = 455
			add_mil_power = 25
		}
	}
	if = {
		limit = {
			development = 24
			NOT = { development = 27 }
		}
		$LOOTER$ = {
			add_treasury = 480
			add_mil_power = 30
		}
	}
	if = {
		limit = {
			development = 27
			NOT = { development = 30 }
		}
		$LOOTER$ = {
			add_treasury = 510
			add_mil_power = 40
		}
	}
	if = {
		limit = {
			development = 30
			NOT = { development = 33 }
		}
		$LOOTER$ = {
			add_treasury = 530
			add_mil_power = 50
		}
	}
	if = {
		limit = {
			development = 33
		}
		$LOOTER$ = {
			add_treasury = 550
			add_mil_power = 55
		}
	}
}

#Religious Schools:
#Country Scope
clear_religious_scholar_modifiers_effect = {
	remove_country_modifier = brotherhood_of_northshire_modifier
	remove_country_modifier = the_conclave_modifier
	remove_country_modifier = order_of_the_silver_hand_modifier
	remove_country_modifier = crimson_legion_modifier
	remove_country_modifier = blood_knights_modifier
	remove_country_modifier = argent_light_modifier
	remove_country_modifier = the_lightforged_modifier
	remove_country_modifier = the_sunwalkers_modifier
}

#Move capital along with all that also needs to be done. Used in capital decisions.
#THIS = Province Scope, ROOT = Country Scope
move_capital_effect = {
	if = {
		limit = {
			is_part_of_hre = yes
			ROOT = {
				is_part_of_hre = no
			}
		}
		set_in_empire = no
		emperor = {
			add_opinion = {
				who = ROOT
				modifier = hre_province_left
			}
		}
		add_imperial_influence = -1
	}
	if = {
		limit = { is_capital = no }
		ROOT = {
			set_capital = PREV
		}
	}
}

#Same as move_capital_effect, but for when you want to move PREV's rather than ROOT's capital
#THIS = Province Scope, PREV = Country Scope
prev_move_capital_effect = {
	if = {
		limit = {
			is_part_of_hre = yes
			PREV = {
				is_part_of_hre = no
			}
		}
		set_in_empire = no
		PREV = {
			emperor = {
				add_opinion = {
					who = PREV
					modifier = hre_province_left
				}
			}
		}
		add_imperial_influence = -1
	}
	if = {
		limit = { is_capital = no }
		PREV = {
			set_capital = PREV
		}
	}
}

remove_non_electors_emperors_from_empire_effect = {
	if = {
		limit = {
			is_part_of_hre = yes
			is_elector = no
			is_emperor = no
		}
		custom_tooltip = remove_non_electors_emperors_from_empire_effect_tooltip
		hidden_effect = {
			every_owned_province = {
				limit = {
					is_part_of_hre = yes
				}
				set_in_empire = no
			}
		}
	}
}

abolish_slavery_effect = {
	custom_tooltip = abolished_slavery_act_tooltip
	hidden_effect = {
		every_owned_province = {
			limit = {
				trade_goods = slaves
			}
			change_trade_goods = unknown
		}
	}
}


add_vassalise_cb_effect = {
	add_casus_belli = {
		type = cb_vassalize_mission
		months = 300
		target = ROOT
	}
}


remove_vassalise_cb_effect = {
	if = {
		limit = {
			has_casus_belli = {
				type = cb_vassalize_mission
				target = event_target:agenda_country
			}
		}
		remove_casus_belli = {
			type = cb_vassalize_mission
			target = event_target:agenda_country
		}
	}
}

#Ends the normal Revolution disaster (if you have it) and clears all related modifiers and flags
clear_standard_revolution_elements_effect = {
	if = {
		limit = {
			has_disaster = revolution
		}
		end_disaster = revolution
	}

	clr_country_flag = religious_revolution
	clr_country_flag = serfdom
	clr_country_flag = social_reform
	clr_country_flag = royal_bureaucracy
	clr_country_flag = deplorable_reign
	clr_country_flag = road_to_bankruptcy
	clr_country_flag = financial_crisis
	clr_country_flag = revolutionary_philosopher
	remove_country_modifier = religious_intolerance
	remove_country_modifier = religious_tolerance
	remove_country_modifier = restrict_serfdom
	remove_country_modifier = enforce_serfdom
	remove_country_modifier = suppress_free_thinkers
	remove_country_modifier = bureaucratic_reduction
	remove_country_modifier = bureaucratic_expansion
	remove_country_modifier = support_monarch
	remove_country_modifier = oppose_monarch
	remove_country_modifier = mint_money
	remove_country_modifier = fight_inflation
	remove_country_modifier = disarmament
	remove_country_modifier = financial_disaster
}

enact_revolution_effect = {
	disband_rebels = revolutionary_rebels
	disband_rebels = anti_tax_rebels
	hidden_effect = {
		if = {	
			limit = {
				any_subject_country = {
					has_country_modifier = colony_inspired_by_revolution
				}
			}
			every_subject_country = {
				remove_country_modifier = colony_inspired_by_revolution
			}
		}
	}
	if = {
		limit = { is_emperor_of_china = yes }
		dismantle_empire_of_china = yes
		set_global_flag = empire_of_china_dismantled
	}
	if = {
		limit = { NOT = { government = republic } }
		change_government_to_republic = yes
	}
	

	add_yearly_manpower = 5

	if = {
		limit = {
			has_country_flag = revolution_disaster_reactionary
		}
		add_country_modifier = {
			name = reactionaries_failed
			duration = 9125
		}
	}

	if = {
		limit = {
			has_country_flag = revolution_disaster_immediate_revolution
		}
		clr_country_flag = revolution_disaster_immediate_revolution
	}
	set_country_flag = revolutionary_republic_flag
}

#province scope
add_half_industrialization_effect = {
	if = {
		limit = {
			is_institution_enabled = clockwerk_engineering
			NOT = { clockwerk_engineering = 100 }
		}
		add_institution_embracement = {
			which = clockwerk_engineering
			value = 50
		}
	}
}

#province scope
add_quarter_industrialization_effect = {
	if = {
		limit = {
			is_institution_enabled = clockwerk_engineering
			NOT = { clockwerk_engineering = 100 }
		}
		add_institution_embracement = {
			which = clockwerk_engineering
			value = 25
		}
	}
}

#province scope, chooses which random monarch point bonus to give for agendas
choose_random_development_bonus_effect = {
	random_list = {
		1 = { set_province_flag = add_base_tax_flag }
		1 = { set_province_flag = add_base_production_flag }
		1 = { set_province_flag = add_base_manpower_flag }
	}
}

apply_random_development_bonus_bonus_effect = {
	trigger_switch = {
		on_trigger = has_province_flag
		add_base_tax_flag = { add_base_tax = 1 }
		add_base_production_flag = { add_base_production = 1 }
		add_base_manpower_flag = { add_base_manpower = 1 }
	}
	clear_random_development_bonus_flags_effect = yes
}

clear_random_development_bonus_flags_effect = {
	clr_province_flag = add_base_tax_flag
	clr_province_flag = add_base_production_flag
	clr_province_flag = add_base_manpower_flag
}
#province scope, should be used whenever the revolution is removed from a province
remove_revolution_from_province_effect = {
	hidden_effect = { set_revolution_in_province = no }
	custom_tooltip = no_spread_here_for_15_years_tt
	add_province_modifier = {
		name = no_revolution_here_dummy
		duration = 5475
		hidden = yes
	}
}


spawn_small_scaled_rebels = {
	#always specify type
	#specify saved_name = <saved_name> if you want to use one of those
	#specify leader and leader_dynasty if you want to do it that way
	#otherwise state "no_defined_leader = yes"
	if = {
		limit = {
			owner = {
				total_development = 1000
			}
		}
		[[no_defined_leader]
			spawn_rebels = {
				size = 3
				type = $type$
			}
		]
		[[leader]
			spawn_rebels = {
				size = 3
				type = $type$
				leader = $leader$
				leader_dynasty = $leader_dynasty$
			}
		]
		[[saved_name]
			spawn_rebels = {
				size = 3
				type = $type$
				leader = $saved_name$
			}
		]
	}
	else_if = {
		limit = {
			owner = {
				total_development = 500
			}
		}
		[[no_defined_leader]
			spawn_rebels = {
				size = 2
				type = $type$
			}
		]
		[[leader]
			spawn_rebels = {
				size = 2
				type = $type$
				leader = $leader$
				leader_dynasty = $leader_dynasty$
			}
		]
		[[saved_name]
			spawn_rebels = {
				size = 2
				type = $type$
				leader = $saved_name$
			}
		]
	}
	else_if = {
		limit = {
			owner = {
				total_development = 200
			}
		}
		[[no_defined_leader]
			spawn_rebels = {
				size = 1.5
				type = $type$
			}
		]
		[[leader]
			spawn_rebels = {
				size = 1.5
				type = $type$
				leader = $leader$
				leader_dynasty = $leader_dynasty$
			}
		]
		[[saved_name]
			spawn_rebels = {
				size = 1.5
				type = $type$
				leader = $saved_name$
			}
		]
	}
	else = {
		[[no_defined_leader]
			spawn_rebels = {
				size = 1
				type = $type$
			}
		]
		[[leader]
			spawn_rebels = {
				size = 1
				type = $type$
				leader = $leader$
				leader_dynasty = $leader_dynasty$
			}
		]
		[[saved_name]
			spawn_rebels = {
				size = 1
				type = $type$
				leader = $saved_name$
			}
		]
	}
}

spawn_large_scaled_rebels = {
	#always specify type
	#specify saved_name = <saved_name> if you want to use one of those
	#specify leader and leader_dynasty if you want to do it that way
	#otherwise state "no_defined_leader = yes"
	if = {
		limit = {
			owner = {
				total_development = 2000
			}
		}
		[[no_defined_leader]
			spawn_rebels = {
				size = 3
				type = $type$
			}
			spawn_rebels = {
				size = 2
				type = $type$
			}
		]
		[[leader]
			spawn_rebels = {
				size = 3
				type = $type$
				leader = $leader$
				leader_dynasty = $leader_dynasty$
			}
			spawn_rebels = {
				size = 2
				type = $type$
			}
		]
		[[saved_name]
			spawn_rebels = {
				size = 3
				type = $type$
				leader = $saved_name$
			}
			spawn_rebels = {
				size = 2
				type = $type$
			}
		]
	}
	else_if = {
		limit = {
			owner = {
				total_development = 1000
			}
		}
		[[no_defined_leader]
			spawn_rebels = {
				size = 3
				type = $type$
			}
			spawn_rebels = {
				size = 1
				type = $type$
			}
		]
		[[leader]
			spawn_rebels = {
				size = 3
				type = $type$
				leader = $leader$
				leader_dynasty = $leader_dynasty$
			}
			spawn_rebels = {
				size = 1
				type = $type$
			}
		]
		[[saved_name]
			spawn_rebels = {
				size = 3
				type = $type$
				leader = $saved_name$
			}
			spawn_rebels = {
				size = 1
				type = $type$
			}
		]
	}
	else_if = {
		limit = {
			owner = {
				total_development = 500
			}
		}
		[[no_defined_leader]
			spawn_rebels = {
				size = 3
				type = $type$
			}
		]
		[[leader]
			spawn_rebels = {
				size = 3
				type = $type$
				leader = $leader$
				leader_dynasty = $leader_dynasty$
			}
		]
		[[saved_name]
			spawn_rebels = {
				size = 3
				type = $type$
				leader = $saved_name$
			}
		]
	}
	else_if = {
		limit = {
			owner = {
				total_development = 200
			}
		}
		[[no_defined_leader]
			spawn_rebels = {
				size = 2.5
				type = $type$
			}
		]
		[[leader]
			spawn_rebels = {
				size = 2.5
				type = $type$
				leader = $leader$
				leader_dynasty = $leader_dynasty$
			}
		]
		[[saved_name]
			spawn_rebels = {
				size = 2.5
				type = $type$
				leader = $saved_name$
			}
		]
	}
	else = {
		[[no_defined_leader]
			spawn_rebels = {
				size = 2
				type = $type$
			}
		]
		[[leader]
			spawn_rebels = {
				size = 2
				type = $type$
				leader = $leader$
				leader_dynasty = $leader_dynasty$
			}
		]
		[[saved_name]
			spawn_rebels = {
				size = 2
				type = $type$
				leader = $saved_name$
			}
		]
	}
}


#country scope. Currently just applies to the Hansa, if future ones are added, update the flags
#Used in nation formation decisions
restore_country_name_effect = {
	hidden_effect = {
		if = {
			limit = {
				has_country_flag = is_hanseatic_league_flag
			}
			restore_country_name = yes
			clr_country_flag = is_hanseatic_league_flag
		}
	}
}

#Used to clone the nation when forming a colonial tag.
restore_old_nation_on_formation_effect = {

}

change_government_to_republic = {
	if = {
		limit = {
			NOT = { government = republic }
		}
		change_government = republic
		lose_reforms = 2
	}
}

change_government_to_monarchy = {
	if = {
		limit = {
			NOT = { government = monarchy }
		}
		if = {
			limit = {
				government = republic
			}
			change_government = monarchy
			lose_reforms = 4
		}
		else = {
			change_government = monarchy
			lose_reforms = 2
		}
	}
}

change_government_to_theocracy = {
	if = {
		limit = {
			NOT = { government = theocracy }
		}
		if = {
			limit = {
				government = republic
			}
			change_government = theocracy
			lose_reforms = 4
		}
		else = {
			change_government = theocracy
			lose_reforms = 2
		}
	}
}

set_correct_dynasty = {
	if = { limit = { tag = STW } define_heir = { dynasty = "Wrynn" claim = 75 no_consort_with_heir = yes } } 
	if = { limit = { tag = A28 } define_heir = { dynasty = "Bronzebeard" claim = 75 no_consort_with_heir = yes } } 
	if = { limit = { tag = A90 } define_heir = { dynasty = "Sunstrider" claim = 75 no_consort_with_heir = yes } } 
	if = { limit = { tag = A91 } define_heir = { dynasty = "Sunstrider" claim = 75 no_consort_with_heir = yes } } 
}

form_holy_order_effect = {
	hidden_effect = { add_local_autonomy = 10 }
	custom_tooltip = ADD_AUTONOMY_TOOLTIP
	add_base_tax = 1
	add_base_production = 1
	add_base_manpower = 1
}

abandon_holy_order_effect = {
	hidden_effect = { add_local_autonomy = -10 }
	custom_tooltip = SUB_AUTONOMY_TOOLTIP
	add_base_tax = -1
	add_base_production = -1
	add_base_manpower = -1
	add_unrest = 2
}

change_province_name_with_year = {
	if = {
		limit = { province_id = 533 } # Hogger's Camp
		if = { limit = {  }  } 
	}
}

save_dominant_non_accepted_culture_as = {
	# every_owned_province = {
		# limit = {
			# OR = {
				# accepted_culture = ROOT
				# culture = ROOT
			# }
		# }
		# set_province_flag = temp_province_of@ROOT
		# cede_province = XXX
	# }
	# export_to_variable = {
		# variable_name = $variable_name$
		# value = dominant_culture
	# }
	# every_province = {
		# limit = {
			# has_province_flag = temp_province_of@ROOT
		# }
		# cede_province = ROOT
	# }
		
	every_owned_province = {
		limit = {
			has_owner_culture = no
			has_owner_accepted_culture = no
			is_state_core = PREV
			NOT = { has_province_flag = check }
		}
		save_event_target_as = check
		export_to_variable = { which = devnum value = development }
		PREV = {
			every_owned_province = {
				limit = {
					is_state_core = PREV
					culture = event_target:check
					NOT = { province_id = event_target:check }
				}
				set_province_flag = check
				export_to_variable = { which = devnum value = development }
				event_target:check = {
					change_variable = { which = devnum which = PREV }
				}
			}
		}
		if = {
			limit = {
				check_variable = { which = devnum which = event_target:second_highest_culture }
			}
			save_event_target_as = second_highest_culture
		}
	}
	every_owned_province = {
		clr_province_flag = check
		set_variable = { which = devnum value = 0 }
	}
	
	event_target:second_highest_culture = {
		export_to_variable = {
			which = $variable_name$
			value = culture
		}
		owner = {
			set_variable = {
				which = $variable_name$
				which = PREV
			}
		}
	}
}

use_adm_talent_on_country = {
	if = {
		limit = {
			advisor = philosopher
		}
		add_prestige = 5
	}
	if = {
		limit = {
			advisor = natural_scientist
		}
		capital_scope = {
			add_base_production = 2
		}
	}
	if = {
		limit = {
			advisor = artist
		}
		add_stability = 1
	}
	if = {
		limit = {
			advisor = treasurer
		}
		capital_scope = {
			add_base_tax = 2
		}
	}
	if = {
		limit = {
			advisor = theologian
		}
		every_owned_province = {
			limit = {
				unrest = 2
			}
			add_unrest = -2
		}
	}
	if = {
		limit = {
			advisor = master_of_mint
		}
		add_inflation = -3
	}
	
}
use_dip_talent_on_country = {

	if = {
		limit = {
			advisor = statesman
		}
		every_ally = {
			add_trust = {
				who = ROOT
				value = 20
				mutual = yes
			}
		}
	}
	if = {
		limit = {
			advisor = naval_reformer
		}
		random_owned_province = {
			limit = { has_port = yes }
			ROOT = {
				heavy_ship = PREV
				light_ship = PREV
				galley = PREV
				transport = PREV
			}
		}
	}
	if = {
		limit = {
			advisor = trader
		}
		capital_scope = { 
			add_trade_node_income = 3
		}
	}
	if = {
		limit = {
			advisor = spymaster
		}
		random_neighbor_country = { 
			limit = {
				NOT = { has_spy_network_from = {
					who = ROOT
					value = 70
				} }
			}
			add_spy_network_from = {
				who = ROOT
				value = 30
			}
		}
	}
	if = {
		limit = {
			advisor = colonial_governor
		}
		random_owned_province = {
			limit = { is_colony = yes }
			add_colonysize = 200
		}
	}
	if = {
		limit = {
			advisor = diplomat
		}
		add_dip_power = 75
	}
	if = {
		limit = {
			advisor = navigator
		}
		create_explorer = 50
	}
}
use_mil_talent_on_country = {
	if = {
		limit = {
			advisor = army_organiser
		}
		add_yearly_manpower = 0.5
	}
	if = {
		limit = {
			advisor = army_reformer
		}
		add_army_professionalism = 0.05
	}
	if = {
		limit = {
			advisor = commandant
		}
		add_army_tradition = 5
	}
	if = {
		limit = {
			advisor = quartermaster
		}
		create_general = { tradition = 50 }
	}
	if = {
		limit = {
			advisor = recruitmaster
		}
		random_owned_province = {
			add_unit_construction = {
				type = cavalry
				amount = 5
				speed = 0.01
				cost = 0
			}
		}
	}
	if = {
		limit = {
			advisor = fortification_expert
		}
		random_owned_province = {
			limit = { NOT = { has_building = wow_fort_1 } }
			add_building = wow_fort_1
		}
	}
	if = {
		limit = {
			advisor = grand_captain
		}
		add_mil_power = 75
	}
}

